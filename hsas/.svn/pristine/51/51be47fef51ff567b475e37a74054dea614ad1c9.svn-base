package csdc.service.imp;

import java.util.List;

import org.springframework.stereotype.Service;

import csdc.service.IDataService;

@Service
public class DataService extends BaseService implements IDataService {

	@Override
	public List calcApplyAuthor() {
		
		//String hql = "select count(distinct p.author)  from ProductAuthor pa left join pa.product p left join p.author person where p.applyYear=2016";

		//String hql = "select count(distinct p.author) ,sum(case when p.status=2 THEN 1 else null end) ,sum(case when date_add(person.birthday,INTERVAL 40 YEAR)>=p.createDate THEN 1 else null end) from ProductAuthor pa left join pa.product p left join p.author person where p.applyYear=2016";
		
		
		// hql = "select count(distinct p.author) ,sum(case when p.status=2 THEN 1 else null end) ,sum(case when timestampdiff(year,person.birthday,p.createDate)<=40 AND (p.rewardLevel=1 or p.rewardLevel=2 or p.rewardLevel=3 or p.rewardLevel=4 ) THEN 1 else null end),sum(case when timestampdiff(year,pa.person.birthday,p.createDate)<=40 THEN 1 else null end) from ProductAuthor pa left join pa.product p left join p.author person where p.applyYear=2016 group by p.id ";
		
		//统计一作人数及40以上获奖人数
		String hql = "select count(distinct p.author) ,sum(case when p.status=2 THEN 1 else null end),sum(case when timestampdiff(year,person.birthday,p.createDate)<=40 AND (p.rewardLevel=1 or p.rewardLevel=2 or p.rewardLevel=3 or p.rewardLevel=4 ) THEN 1 else null end)  from Product p left join p.author person where p.applyYear=2016";

		//统计所有作者及40岁以上获奖人数
		//String hql = "select count(distinct pa.person) ,sum(case when p.status=2 THEN 1 else null end),sum(case when timestampdiff(year,pa.person.birthday,p.createDate)<=40 AND (p.rewardLevel=1 or p.rewardLevel=2 or p.rewardLevel=3 or p.rewardLevel=4 ) THEN 1 else null end)  from ProductAuthor pa left join pa.product p  where p.applyYear=2016";

		//分开查
		//String hql = "select p.id,count(distinct p.author) ,sum(case when p.status=2 THEN 1 else null end) ,sum(case when timestampdiff(year,person.birthday,p.createDate)<=40 AND (p.rewardLevel=1 or p.rewardLevel=2 or p.rewardLevel=3 or p.rewardLevel=4 ) THEN 1 else null end),sum(case when timestampdiff(year,pa.person.birthday,p.createDate)<=40 THEN 1 else null end) from Product p left join p.author person,ProductAuthor pa  where p.id=pa.product.id and  p.applyYear=2016";
		//String hql = "select count(distinct p.author) ,sum(case when p.status=2 THEN 1 else null end) ,sum(case when timestampdiff(year,person.birthday,p.createDate)<=40 AND (p.rewardLevel=1 or p.rewardLevel=2 or p.rewardLevel=3 or p.rewardLevel=4 ) THEN 1 else null end),sum(case when timestampdiff(year,pa.person.birthday,p.createDate)<=40 THEN 1 else null end) from Product p left join p.author person,ProductAuthor pa  where p.id=pa.product.id and  p.applyYear=2016 group by p.id";

		
		

		/*
		 * 
		//统计一作人数及40以上获奖人数
		String hql = "select count(distinct p.author) ,sum(case when p.status=2 THEN 1 else null end),sum(case when timestampdiff(year,person.birthday,p.createDate)<=40 AND (p.rewardLevel=1 or p.rewardLevel=2 or p.rewardLevel=3 or p.rewardLevel=4 ) THEN 1 else null end)  from Product p left join p.author person where p.applyYear=2016";
		
		//统计所有作者及40岁以上获奖人数
		String hql = "select count(distinct pa.person) ,sum(case when p.status=2 THEN 1 else null end),sum(case when timestampdiff(year,pa.person.birthday,p.createDate)<=40 AND (p.rewardLevel=1 or p.rewardLevel=2 or p.rewardLevel=3 or p.rewardLevel=4 ) THEN 1 else null end)  from ProductAuthor pa left join pa.product p  where p.applyYear=2016";

		
		 //申报情况
		//String hql = "select sum(case when p.status=4 THEN 1 else null end),sum(case when p.status=6 THEN 1 else null end),sum(case when p.status=7 THEN 1 else null end) from Product p  where p.applyYear=2016  ";
		
		//复评情况
		String hql = "select p.groupName , sum(case when p.type='著作' THEN 1 else null end),sum(case when p.type='系列论文' and p.researchType ='基础类'THEN 1 else null end),sum(case when p.type='系列论文' and p.researchType ='应用对策类'THEN 1 else null end)," +
				"sum(case when p.type='单篇论文' and p.researchType ='基础类'THEN 1 else null end),sum(case when p.type='单篇论文' and p.researchType ='应用对策类'THEN 1 else null end)," +
				"sum(case when p.type='调研报告' and p.researchType ='基础类'THEN 1 else null end),sum(case when p.type='调研报告' and p.researchType ='应用对策类'THEN 1 else null end) " +
				"from Product p  where p.status =6 and p.applyYear=2016  group by p.groupName ";
				
				//合计
		String hql = "select '合计' , sum(case when p.type='著作' THEN 1 else null end),sum(case when p.type='系列论文' and p.researchType ='基础类'THEN 1 else null end),sum(case when p.type='系列论文' and p.researchType ='应用对策类'THEN 1 else null end)," +
				"sum(case when p.type='单篇论文' and p.researchType ='基础类'THEN 1 else null end),sum(case when p.type='单篇论文' and p.researchType ='应用对策类'THEN 1 else null end)," +
				"sum(case when p.type='调研报告' and p.researchType ='基础类'THEN 1 else null end),sum(case when p.type='调研报告' and p.researchType ='应用对策类'THEN 1 else null end) " +
				"from Product p  where p.status =6 and p.applyYear=2016  ";
		//初评情况
		String hql = "select p.groupName , sum(case when p.type='著作' THEN 1 else null end),sum(case when p.type='系列论文' and p.researchType ='基础类'THEN 1 else null end),sum(case when p.type='系列论文' and p.researchType ='应用对策类'THEN 1 else null end)," +
				"sum(case when p.type='单篇论文' and p.researchType ='基础类'THEN 1 else null end),sum(case when p.type='单篇论文' and p.researchType ='应用对策类'THEN 1 else null end)," +
				"sum(case when p.type='调研报告' and p.researchType ='基础类'THEN 1 else null end),sum(case when p.type='调研报告' and p.researchType ='应用对策类'THEN 1 else null end) " +
				"from Product p  where p.status =4 and p.applyYear=2016  group by p.groupName ";

		//合计
		String hql = "select '合计' , sum(case when p.type='著作' THEN 1 else null end),sum(case when p.type='系列论文' and p.researchType ='基础类'THEN 1 else null end),sum(case when p.type='系列论文' and p.researchType ='应用对策类'THEN 1 else null end)," +
				"sum(case when p.type='单篇论文' and p.researchType ='基础类'THEN 1 else null end),sum(case when p.type='单篇论文' and p.researchType ='应用对策类'THEN 1 else null end)," +
				"sum(case when p.type='调研报告' and p.researchType ='基础类'THEN 1 else null end),sum(case when p.type='调研报告' and p.researchType ='应用对策类'THEN 1 else null end) " +
				"from Product p  where p.status =4 and p.applyYear=2016  ";
		//单位申报总数
		String hql = "select  p.agencyName,sum(case when p.type='著作' THEN 1 else null end),sum(case when p.type='系列论文' THEN 1 else null end),"+
				"sum(case when p.type='单篇论文' THEN 1 else null end),sum(case when p.type='调研报告' THEN 1 else null end),count(p.id)"+
				"from Product p  where p.applyYear=2016 group by p.agencyName";
		//奖项分布
		String hql = "select  p.agencyName,sum(case when p.type='著作' and p.rewardLevel=2 THEN 1 else null end),sum(case when p.type='著作' and p.rewardLevel=3 THEN 1 else null end),sum(case when p.type='著作' and p.rewardLevel=4 THEN 1 else null end)," +
				"sum(case when p.type='系列论文' and p.rewardLevel=2 THEN 1 else null end),sum(case when p.type='系列论文' and p.rewardLevel=3 THEN 1 else null end),sum(case when p.type='系列论文' and p.rewardLevel=4 THEN 1 else null end),"+
				"sum(case when p.type='调研报告' and  p.rewardLevel=2 THEN 1 else null end),sum(case when p.type='调研报告' and p.rewardLevel=3 THEN 1 else null end),sum(case when p.type='调研报告' and  p.rewardLevel=4 THEN 1 else null end)," +
				"sum(case when p.rewardLevel=2  or p.rewardLevel=3 or p.rewardLevel=4 THEN 1 else null end)"+
				"from Product p  where p.applyYear=2016 group by p.agencyName";*/

		return dao.query(hql);
	}

}
